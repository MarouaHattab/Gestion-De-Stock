<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="stockOutBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>49</value>
  </metadata>
</root>